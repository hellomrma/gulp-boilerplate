/* SASS */
body,
div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
p,
table,
th,
td,
form,
fieldset,
legend,
textarea,
input,
select,
textarea,
button {
  margin: 0;
  padding: 0;
}

html,
body {
  height: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;
}

fieldset,
li,
img {
  border: 0;
  vertical-align: top;
}

ul,
ol {
  list-style: none;
}

button {
  overflow: visible;
  border: 0;
  background-color: transparent;
  cursor: pointer;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

address,
caption,
em {
  font-style: normal;
}

a,
a:focus,
a:active,
a:hover {
  text-decoration: none;
  color: #333;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  display: none;
}

.blind,
legend {
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  width: 1px;
  height: 1px;
  font-size: 1px;
  line-height: 100px;
  white-space: nowrap;
}

#skip {
  height: 0;
}

#skip a {
  display: block;
  position: absolute;
  left: 0;
  top: -100px;
  width: 100%;
  height: 25px;
  text-align: center;
}

#skip a:focus,
#skip a:active {
  position: absolute;
  top: 0;
  z-index: 100;
  padding: 10px 0;
  background: #77a835;
  font-weight: bold;
  color: #fff;
  font-size: 20px;
  text-decoration: none;
}

.sp {
  display: inline-block;
  overflow: hidden;
  width: 1px;
  height: 1px;
  font-size: 1px;
  white-space: nowrap;
  letter-spacing: -7px;
  color: transparent;
  background-image: url(../img/sp.png);
  background-repeat: no-repeat;
  background-size: 420px auto;
  background-color: transparent;
}

/* MAIN */
body {
  background-color: #333;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
